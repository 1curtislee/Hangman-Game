const $pressStart = $('#pressStart');
const $gameContainer = $('#gameContainer');
const $winner = $('#winner')
const $loser = $('#loser')

let $wins = $('#wins');
let $losses = $('#losses');
let $currentWord = $('#currentWord');
let $remainingGuesses = $('#remainingGuesses');
let $lettersGuessed = $('#lettersGuessed');

const words = [
  "backscratcher",
  "organize",
  "caffeinated",
  "amazing",
  "jostle"
];
let guessableLetters = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"]
let wins = 0;
let losses = 0;
let readyForGuess = false;
let currentWord = "";
let currentWordArray = [];
let wordDisplay = "";
let remainingGuesses = 20;
let lettersGuessed = [];

// onLoad
function setup() {
  readyForGuess = false;
  currentWord = "";
  currentWordArray = [];
  wordDisplay = "";
  remainingGuesses = 20;
  lettersGuessed = [];

  $pressStart.show();
  $gameContainer.hide();
  $winner.hide();
  $loser.hide();
}

// onKeyPress
function keyPressHandler() {
  if (readyForGuess === false) {
    gameStart();
  } else if (readyForGuess === true) {
    userGuess(event.key);
  }
}

function gameStart() {
  $pressStart.hide();
  $gameContainer.show();
  $wins.text(wins)
  readyForGuess = true;
  lettersGuessed = [];
  remainingGuesses = 20;
  
  let currentWordIndex = Math.floor(Math.random() * (words.length));
  currentWord = words[currentWordIndex];

  console.log(currentWord) //TESTING ----------------------------------------

  for (let i = 0; i < words[currentWordIndex].length; i++) {
    currentWordArray.push("*")
  }

  for (let i = 0; i < currentWordArray.length; i++) {
    wordDisplay += currentWordArray[i];
  }
  $currentWord.text(wordDisplay);

  $wins.text(/*var generated by completed word function*/);
  $remainingGuesses.text(remainingGuesses);
  $lettersGuessed.text(lettersGuessed);
}

function userGuess(e) {
  for (let i = 0; i < guessableLetters.length; i++) {
    if (e === guessableLetters[i]) { 
      if (!lettersGuessed.includes(e)) {
        lettersGuessed.push(e);
        updateWord();
      }
    }
  }
  winCheck();
  remainingGuesses--;
  $remainingGuesses.text(remainingGuesses);
  $lettersGuessed.text(lettersGuessed);
};

function updateWord() {
  const newArray = wordDisplay.split('')
  for (let i = 0; i < currentWord.length; i++) {
    if (currentWord[i] === event.key) {
      newArray.splice(i, 1, event.key);
    }
    wordDisplay = newArray.join('')
  }
  
  $currentWord.text(wordDisplay);
}

function winCheck() {
  if (wordDisplay === currentWord) {
    wins++;
    $wins.text(wins)
    readyForGuess = false;
    
    $currentWord.text(wordDisplay);
    $winner.show();
    $pressStart.show();
    setup();
  } else if (remainingGuesses === 0) {
    losses++;
    $losses.text(losses)
    $gameContainer.hide();
    $loser.show();
    $pressStart.show();
    setup();
  }
}


















